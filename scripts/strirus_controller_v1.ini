;The configuration file must have the following sections:
;[EVAL]: parameters for the algorithm
;[POLICY]: parameters of the policy
;[FITNESS]: parameters for fitness func
;[ROBOT]: parameters for robot
;[OTHERS]: parameters like multiprocessing and so on



;nevals [integer]          : number of evaluations
;numHiddens [integer]      : number of hiddens x layer
;numHiddenLayers [integer] : number of hidden layers
;id_algo [integer]         : ES: 0=xNES, 1=CMA-ES, 2=OpenAI-ES
;ntrials [integer]         : number of evaluation episodes
;stepsize [float]          : stepsize used to move the centroid by Adam optimizer
;biasCorr [0/1]            : whether or not the OpenAI-ES uses bias correction
;noiseStdDev [float]       : coefficient to be applied to samples (used only in OpenAI-ES)
;environment [string]      : environment used (task)
;sampleSize [integer]      : number of samples
;fullyRandom [0/1]         : whether or not the candidate solutions are evaluated in fully-random episodes
;storingRate [integer]     : frequency (in terms of number of generations) at which centroid and statistics are saved
;envChangeEvery [integer]  : frequency (in terms of number of generations) at which new evaluation episodes are generated (used only if <fullyRandom> flag is unset)


[EVAL]
id_algo = 2
nevals = 1000000
ntrials = 1
numHiddens = 96
numHiddenLayers = 1
storingRate = 200
biasCorr = 1
environment = Strirus_gamma_controller-v0
stepsize = 0.01
sampleSize = 5
fullyRandom = 1


;out_type [integer]        : type of output: 0=continuous, 1=binary, >1=uniform with bins (the number indicates how many bins are used)
;connection_type [string]  : the type of neural network
;nonlin_type [string]      : the activation function of the neural network
;nonlin_out [0/1]          : whether or not the network outputs are linear
;init_type [string]        : the type of parameter's initialization
;ac_noise_std [float]      : the noise range to be applied to actions (if 0.0, actions are not stochastic)
;norm_inp [0/1]            : whether or not the input observations must be normalized

[POLICY]
out_type = 0
ac_noise_std = 0.01
connection_type = ff
nonlin_type = tanh
nonlin_out = 0
init_type = normc
norm_inp = 0


[FITNESS]
max_dist_var = 4.5
w1 = 1
w2 = 2

[ROBOT]
leg_rand_pos = 0

[OTHERS]
;max proc - haven't implemented yet
max_processes = 1
step_time_individual_limit = 1001
tasks_amount = 4
